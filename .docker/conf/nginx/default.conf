server {
    listen   80;
    server_name api.clinicarx.local;

    # root directive should be global
    root   /var/www/html/clinicarx.api/webroot/;
    index  index.php;

    access_log /var/www/html/clinicarx.api/logs/access.log;
    error_log /var/www/html/clinicarx.api/logs/error.log;

    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
        try_files $uri =404;
        include /etc/nginx/fastcgi_params;
        fastcgi_pass    php:9000;
        fastcgi_index   index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }
}

server {
    server_name app.clinicarx.local;

    # Listen to http and then redirects it to https
    listen 80;
    listen [::]:80;

    root /var/www/html/clinicarx.app;
    index index.html;

    location = /favicon.ico {
    	log_not_found off;
    	access_log off;
    }

    location = /robots.txt {
    	allow all;
    	log_not_found off;
    	access_log off;
    }

    # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
    # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
    location ~ /\. {
    	deny all;
    }

    # Deny access to any files with a .php extension in the uploads directory
    # Works in sub-directory installs and also in multisite network
    # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
    location ~* /(?:uploads|files)/.*\.php$ {
    	deny all;
    }

    # Additional rules go here.

    location / {
        # This is cool because no php is touched for static content.
        # include the "?$args" part so non-default permalinks doesn't break when using query string
        try_files $uri /index.html;
    }

    client_max_body_size 16M;

    access_log /var/log/nginx/app.clinicarx.local.access.log;
    error_log /var/log/nginx/app.clinicarx.local.error.log;
}